#!/system/bin/sh

/usbdbg.sh device

SDCARD_PATH=/mnt/mmc # TF1
SYSTEM_FRAG=/.system/rg35xx
SYSTEM_PATH=${SDCARD_PATH}${SYSTEM_FRAG}

mkdir /mnt/sdcard
if [ -e /dev/block/mmcblk1p1 ]
then
	SDCARD_DEVICE=/dev/block/mmcblk1p1
else
	SDCARD_DEVICE=/dev/block/mmcblk1
fi
mount -t vfat -o rw,utf8,noatime $SDCARD_DEVICE /mnt/sdcard
if [ $? -ne 0 ]
then
	mount -t exfat -o rw,utf8,noatime $SDCARD_DEVICE /mnt/sdcard
fi

if [ ! -d $SYSTEM_PATH ]; then
	# try TF2
	SDCARD_PATH=/mnt/sdcard
	SYSTEM_PATH=${SDCARD_PATH}${SYSTEM_FRAG}
fi

ROOTFS_IMAGE=$SYSTEM_PATH/rootfs.img
if [ ! -f $ROOTFS_IMAGE ]; then
	# fallback to stock demenu.bin
	# TODO: embed dmenu_ln here
	/mnt/vendor/bin/dmenu.bin
	# reboot -p
	exit
fi

ROOTFS_MOUNTPOINT=/cfw
LOOPDEVICE=/dev/block/loop7
mkdir $ROOTFS_MOUNTPOINT
busybox losetup $LOOPDEVICE $ROOTFS_IMAGE
mount -r -w -o loop -t ext4 $LOOPDEVICE $ROOTFS_MOUNTPOINT
rm -rf $ROOTFS_MOUNTPOINT/tmp/*
mkdir $ROOTFS_MOUNTPOINT/mnt/mmc
mkdir $ROOTFS_MOUNTPOINT/mnt/sdcard
for f in dev dev/pts proc sys run mnt/mmc mnt/sdcard
do
	mount -o bind /$f $ROOTFS_MOUNTPOINT/$f
done

export PATH=/usr/sbin:/usr/bin:/sbin:/bin:$PATH
export LD_LIBRARY_PATH=/usr/lib/:/lib/
export HOME=$SDCARD_PATH
busybox chroot $ROOTFS_MOUNTPOINT $SYSTEM_PATH/paks/MinUI.pak/launch.sh &> $SYSTEM_PATH/log.txt

umount $ROOTFS_MOUNTPOINT
busybox losetup --detach $LOOPDEVICE
sync && reboot -p
